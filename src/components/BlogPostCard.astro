---
import type { BlogPost } from "../lib/blog-utils";
import { formatDate, formatCompactDate } from "../lib/blog-utils";

interface Props {
    post: BlogPost;
    variant?: "default" | "compact" | "featured";
    showAuthor?: boolean;
    showReadingTime?: boolean;
    showTags?: boolean;
    maxTags?: number;
}

const {
    post,
    variant = "default",
    showAuthor = true,
    showReadingTime = true,
    showTags = true,
    maxTags = 3,
} = Astro.props;

const cardClasses = {
    default:
        "group bg-stone-800/50 border border-stone-700 rounded-lg p-6 hover:border-stone-600 hover:bg-stone-800/70 transition-all duration-200",
    compact:
        "group bg-stone-800/50 border border-stone-700 rounded-lg p-4 hover:border-stone-600 hover:bg-stone-800/70 transition-all duration-200",
    featured:
        "group bg-gradient-to-br from-stone-800/50 to-stone-900/50 border border-stone-700 rounded-lg p-8 hover:border-stone-600 hover:from-stone-800/70 hover:to-stone-900/70 transition-all duration-200",
};

const titleClasses = {
    default:
        "text-2xl font-bold text-stone-100 mb-2 group-hover:text-white transition-colors",
    compact:
        "text-lg font-bold text-stone-100 mb-2 group-hover:text-white transition-colors line-clamp-2",
    featured:
        "text-3xl font-bold text-stone-100 mb-3 group-hover:text-white transition-colors",
};

const descriptionClasses = {
    default: "text-stone-300 leading-relaxed",
    compact: "text-stone-300 text-sm leading-relaxed line-clamp-3",
    featured: "text-stone-300 text-lg leading-relaxed",
};
---

<article class={cardClasses[variant]}>
    <div class="flex flex-col gap-4">
        <header>
            <h3 class={titleClasses[variant]}>
                <a
                    href={post.url}
                    class="hover:text-stone-300 transition-colors"
                >
                    {post.title}
                </a>
            </h3>
            <p class={descriptionClasses[variant]}>
                {post.description}
            </p>
        </header>

        <div class="flex flex-wrap items-center gap-4 text-sm text-stone-500">
            <time datetime={post.pubDate} class="flex items-center gap-1">
                <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                    ></path>
                </svg>
                {
                    variant === "compact"
                        ? formatCompactDate(post.pubDate)
                        : formatDate(post.pubDate)
                }
            </time>

            {
                showReadingTime && (
                    <span class="flex items-center gap-1">
                        <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                            />
                        </svg>
                        {post.readingTime} min read
                    </span>
                )
            }

            {
                showAuthor && post.author && (
                    <span class="flex items-center gap-1">
                        <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                            />
                        </svg>
                        {post.author}
                    </span>
                )
            }
        </div>

        {
            showTags && post.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                    {post.tags.slice(0, maxTags).map((tag) => (
                        <span class="px-2 py-1 bg-stone-700 text-stone-300 rounded-full text-xs hover:bg-stone-600 transition-colors">
                            #{tag}
                        </span>
                    ))}
                    {post.tags.length > maxTags && (
                        <span class="px-2 py-1 bg-stone-600 text-stone-400 rounded-full text-xs">
                            +{post.tags.length - maxTags} more
                        </span>
                    )}
                </div>
            )
        }

        <footer>
            <a
                href={post.url}
                class="inline-flex items-center gap-2 text-stone-100 hover:text-stone-300 transition-colors font-medium group-hover:gap-3"
            >
                {
                    variant === "featured"
                        ? "Read full article"
                        : variant === "compact"
                          ? "Read more"
                          : "Read full article"
                }
                <svg
                    class="w-4 h-4 transition-transform group-hover:translate-x-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"></path>
                </svg>
            </a>
        </footer>
    </div>
</article>

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
